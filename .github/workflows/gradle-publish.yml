# This workflow will build a package using Gradle and then publish it to GitHub packages when pushed

name: Gradle Package

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG:  ${{ github.RUN_NUMBER }}.0  #${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3.0.0

    - name: Change wrapper permissions
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run: ./gradlew build

    - name: Extract metadata (tags, labels) for registry
      if: ${{ github.event_name == 'push' }}
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ env.IMAGE_TAG }}
          type=raw,value=latest
        labels: |
          org.opencontainers.image.description="${{ github.event.head_commit.message }}"

    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Image to Container Registry
      if: ${{ github.event_name == 'push' }}
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

